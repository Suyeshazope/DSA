public class Graph {
    ArrayList<Node> nodes = new ArrayList();
    int[][] edges;
    HashMap<Character, Integer> map;
    int counter;

    public Graph(int size) {
        this.edges = new int[size][size];
        this.map = new HashMap();
        this.counter = 0;
    }

    public void addNode(Node node) {
        this.nodes.add(node);
        this.map.put(node.getData(), this.counter++);
    }

    public void addEdge(char src, char dst) {
        int s = this.getInt(src);
        int d = this.getInt(dst);
        this.edges[s][d] = 1;
    }

    private int getInt(char a) {
        return (Integer)this.map.get(a);
    }

    public boolean checkEdge(char src, char dest) {
        return this.edges[this.getInt(src)][this.getInt(dest)] == 1;
    }

    public void printMap() {
        System.out.print("  ");

        PrintStream var10000;
        Object var10001;
        int i;
        for(i = 0; i < this.nodes.size(); ++i) {
            var10000 = System.out;
            var10001 = this.nodes.get(i);
            var10000.print(((Node)var10001).getData() + " ");
        }

        System.out.println();

        for(i = 0; i < this.edges.length; ++i) {
            var10000 = System.out;
            var10001 = this.nodes.get(i);
            var10000.print(((Node)var10001).getData() + " ");

            for(int j = 0; j < this.edges[0].length; ++j) {
                System.out.print(this.edges[i][j] + " ");
            }

            System.out.println();
        }

    }
}
